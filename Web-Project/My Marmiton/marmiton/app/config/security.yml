# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:

    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    # providers:
        
    # firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        
            # activate different ways to authenticate

            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            #http_basic: ~

            # https://symfony.com/doc/current/security/form_login_setup.html
            #form_login: ~
# app/config/security.yml
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512
        utilisateursBundle\Entity\utilisateurs: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        in_memory:
            memory: ~
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/
            form_login:
                check_path:     fos_user_security_check
                failure_path:   admin
                default_target_path: admin
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
                # if you are using Symfony < 2.8, use the following config instead:
                # csrf_provider: form.csrf_provider
            logout:
                path:        fos_user_security_logout
                target:      /
            logout:       true
            anonymous:    true
            oauth:
                # Declare the OAuth Callback URLs for every resource owner
                # They will be added in the routing.yml file too later
                resource_owners:
                    facebook: "/connect/check-facebook"
                ## Provide the original login path of your application (fosuserroute)
                ## and the failure route when the authentication fails.
                login_path:     fos_user_security_login
                failure_path:   fos_user_security_login
                # Inject a service that will be created in the step #6
                oauth_user_provider:
                    service: my.custom.user_provider
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        
        # - { path: ^/[^/]+/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/[^/]+/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/[^/]+/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/admin/, role: ROLE_ADMIN }
        # - { path: ^/adminPanel, role: ROLE_USER }
        # - { path: ^/superAdminPanel, role: ROLE_ADMIN }
        